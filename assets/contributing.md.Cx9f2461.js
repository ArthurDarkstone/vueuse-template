import{_ as e,c as a,o as s,a2 as i}from"./chunks/framework.TvTER_e8.js";const g=JSON.parse('{"title":"Contributing","description":"","frontmatter":{},"headers":[],"relativePath":"contributing.md","filePath":"contributing.md"}'),t={name:"contributing.md"},n=i(`<h1 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h1><p>Thanks for being interested in contributing to this project!</p><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><h3 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h3><p>Clone this repo to your local machine and install the dependencies.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span></code></pre></div><p>We use VitePress for rapid development and documenting. You can start it locally by</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span></span></code></pre></div><h2 id="contributing-1" tabindex="-1">Contributing <a class="header-anchor" href="#contributing-1" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><h3 id="existing-functions" tabindex="-1">Existing functions <a class="header-anchor" href="#existing-functions" aria-label="Permalink to &quot;Existing functions&quot;">​</a></h3><p>Feel free to enhance the existing functions. Please try not to introduce breaking changes.</p><h3 id="new-functions" tabindex="-1">New functions <a class="header-anchor" href="#new-functions" aria-label="Permalink to &quot;New functions&quot;">​</a></h3><p>There are some notes for adding new functions</p><ul><li>Before you start working, it&#39;s better to open an issue to discuss first.</li><li>The implementation should be placed under <code>packages/vue</code> as a folder and exposing in <code>index.ts</code></li><li>In the <code>vue</code> package, try not to introduce 3rd-party dependencies as this package is aimed to be as lightweight as possible.</li><li>If you&#39;d like to introduce 3rd-party dependencies, please contribute to @utils/integrations or create a new add-on.</li><li>You can find the function template under <code>packages/vue/_template/</code>, details explained in the <a href="#function-folder">Function Folder</a> section.</li><li>When writing documentation for your function, the <code>&lt;!--FOOTER_STARTS--&gt;</code> and <code>&lt;!--FOOTER_ENDS--&gt;</code> will be automatically updated at build time, so don&#39;t feel the need to update them.</li></ul><blockquote><p>Please note you don&#39;t need to update packages&#39; <code>index.ts</code>. They are auto-generated.</p></blockquote><h3 id="new-add-ons" tabindex="-1">New add-ons <a class="header-anchor" href="#new-add-ons" aria-label="Permalink to &quot;New add-ons&quot;">​</a></h3><p>New add-ons are greatly welcome!</p><ul><li>Create a new folder under <code>packages/</code>, name it as your add-on name.</li><li>Add add-on details in <code>scripts/packages.ts</code></li><li>Create <code>README.md</code> under that folder.</li><li>Add functions as you would do to the core package.</li><li>Commit and submit as a PR.</li></ul><h2 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h2><h3 id="monorepo" tabindex="-1">Monorepo <a class="header-anchor" href="#monorepo" aria-label="Permalink to &quot;Monorepo&quot;">​</a></h3><p>We use monorepo for multiple packages</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>packages</span></span>
<span class="line"><span>  core/         - shared utils across packages</span></span>
<span class="line"><span>  vue/           - the core package</span></span>
<span class="line"><span>  components/       - the Firebase add-on</span></span>
<span class="line"><span>  [...addons]/    - add-ons named</span></span></code></pre></div><h3 id="function-folder" tabindex="-1">Function Folder <a class="header-anchor" href="#function-folder" aria-label="Permalink to &quot;Function Folder&quot;">​</a></h3><p>A function folder typically contains these 4 files:</p><blockquote><p>You can find the template under <code>packages/vue/_template/</code></p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">index.ts</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            # function source code itself</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">demo.vue</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            # documentation demo</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">index.test.ts</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       # vitest unit testing</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">index.md</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            # documentation</span></span></code></pre></div><p>for <code>index.ts</code> you should export the function with names.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// DO</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> useMyFunction</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// DON&#39;T</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> default</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> useMyFunction</span></span></code></pre></div><p>for <code>index.md</code> the first sentence will be displayed as the short intro in the function list, so try to keep it brief and clear.</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">#</span><span style="--shiki-light:#1C6B48;--shiki-dark:#4D9375;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"> useMyFunction</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">This will be the intro. The detail descriptions...</span></span></code></pre></div><h2 id="code-style" tabindex="-1">Code Style <a class="header-anchor" href="#code-style" aria-label="Permalink to &quot;Code Style&quot;">​</a></h2><p>Don&#39;t worry about the code style as long as you install the dev dependencies. Git hooks will format and fix them for you on committing.</p><h2 id="thanks" tabindex="-1">Thanks <a class="header-anchor" href="#thanks" aria-label="Permalink to &quot;Thanks&quot;">​</a></h2><p>Thank you again for being interested in this project! You are awesome!</p>`,34),o=[n];function l(d,p,r,c,h,u){return s(),a("div",null,o)}const b=e(t,[["render",l]]);export{g as __pageData,b as default};
